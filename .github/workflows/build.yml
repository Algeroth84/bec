name: Build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        otp-version: [23, 24, 25]
    runs-on: ${{ matrix.platform }}
    container:
      image: erlang:${{ matrix.otp-version }}
    services:
      bitbucket:
        image: atlassian/bitbucket-server:7.17.1
        ports:
          - 7990:7990
        env:
          SETUP_DISPLAYNAME: Bitbucket
          SETUP_BASEURL: http://bitbucket:7990
          # Get license here https://developer.atlassian.com/platform/marketplace/timebomb-licenses-for-testing-server-apps/
          SETUP_LICENSE: AAABrQ0ODAoPeNp9kVFvmzAQx9/9KSztLZIJZIu0RkJqA6yNViAK0G3d+uDApXgjNrKPbPn2dYG0a 6fuwS8+393v//O7vAMa8yN1PerOFrPZYn5GL+OczlzvI0m6/RZ0uisMaON7LgmURF5iwvfgVy3XW pj6nGPDjRFcOqXaE4Pc1M61KEEayI8t9I+DNI6jTbC6uP73wd/FdafLmhsIOYL/yMDcOXM98p95Y yn60wp97PvW769OpFHMRfMWagb6AHoV+svLs5x9LW4+sM+3t1ds6XpfRkw7jwcgEbSPugOSdVtTa tGiUHK4mUwmSZqzT+mGrTdpWAT5Kk1YkUW24AcaLFBFt0eKNdARlUayVBVo2mr1E0qk32vE9sdiO r1XzgvEaTN0MBg67hwaKioV0koY1GLbIdjJwlBUtOwMqr39KYfY1JZZclm+9jLEsmbEAZ4CBJvoI o9Ctvz2CP2GrRHe6irkL6l+S5JFiW8Pm7suSfU9l8LwXkwIB2hUaxPmYPAUm/Q2bP315w5MGXL95 DmEZ839jFEE3SlNedvS6rTCkOjAm25YvOON3fMAVTj4nTAtAhRH4o+fI5MQ7xSh2mtA1bPJrq0WA gIVAIGperR8m2N0fl/GfUUJfQnd+T1aX02kk
          SETUP_SYSADMIN_USERNAME: admin
          SETUP_SYSADMIN_PASSWORD: admin
          SETUP_SYSADMIN_DISPLAYNAME: Admin
          SETUP_SYSADMIN_EMAILADDRESS: admin@example.com
          SEARCH_ENABLED: false
        options: --health-retries 20 --health-cmd "curl -s http://localhost:7990/status | grep RUNNING"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Hex packages
      uses: actions/cache@v1
      with:
        path: ~/.cache/rebar3/hex/hexpm/packages
        key: ${{ runner.os }}-hex-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.lock')) }}
        restore-keys: |
          ${{ runner.os }}-hex-
    - name: Cache Dialyzer PLTs
      uses: actions/cache@v1
      with:
        path: ~/.cache/rebar3/rebar3_*.plt
        key: ${{ runner.os }}-dialyzer-${{ hashFiles(format('{0}{1}', github.workspace, '/rebar.config')) }}
        restore-keys: |
          ${{ runner.os }}-dialyzer-
    - name: Compile
      run: rebar3 as test compile
    - name: Run Checks
      run: rebar3 do dialyzer,xref
    - name: Run EUnit Tests
      run: rebar3 eunit
    - name: Run CT Tests
      run: rebar3 ct
    - name: Store CT Logs
      uses: actions/upload-artifact@v1
      with:
        name: ct-logs
        path: _build/test/logs
    - name: Run PropEr Tests
      run: rebar3 proper
      env:
        BB_STAGING_URL: http://bitbucket:7990
        BB_STAGING_PROJECT_KEY: TOOLS
        BB_STAGING_REPO_SLUG: bec-test
        BB_STAGING_TEAM_A: team.a
        BB_STAGING_TEAM_B: team.b
        BB_STAGING_USER_A: user.a
        BB_STAGING_USER_B: user.b
        BB_STAGING_USERNAME: admin
        BB_STAGING_PASSWORD: admin
    - name: Store logs from PropEr runs
      uses: actions/upload-artifact@v3
      with:
        name: proper-logs
        path: log/*.log
    - name: Create Cover Reports
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: rebar3 cover
    - name: Produce Documentation
      run: rebar3 edoc
    - name: Publish Documentation
      uses: actions/upload-artifact@v1
      with:
        name: edoc
        path: doc
